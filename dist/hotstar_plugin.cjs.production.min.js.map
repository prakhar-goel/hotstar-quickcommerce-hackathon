{"version":3,"file":"hotstar_plugin.cjs.production.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/config.ts","../src/utils.ts","../src/app.ts","../src/index.ts"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { Config } from \"./types\"\nconst config: Config = {\n    GoogleAnalyticsCode: 'G-G5RBRDVPCF',\n    AdComponentElementId: 'hotstar_ad_plugin',\n    DataAttribute: 'data-displaymaxtap',\n    classNames: {\n        image_wrapper: \"maxtap_img_wrapper\",\n    },\n    PrefetchImageTime: 15,\n    DataUrl: \"https://storage.googleapis.com/publicmaxtap-prod.appspot.com/data\"\n}\n\nexport const shoppingBagSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-shopping-bag\"><path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"></path><line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line><path d=\"M16 10a4 4 0 0 1-8 0\"></path></svg>`\nexport default config;","import Config from './config';\nimport { AdComponentData, GaGeneric } from './types';\nimport { LIB_VERSION } from './version';\nimport * as platform from 'platform';\nconst sampleData = {\n  onam: {\n    adsData: [\n      {\n        startTime: 5,\n        endTime: 20,\n        items: [\n          {\n            imageUrl:\n              'https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,h_600/FOOD_CATALOG/IMAGES/CMS/2024/7/4/4e30b1ff-dbe8-41d3-b083-d46b9d742ffc_636d161e-7f34-4371-b63c-bf9e3d091a0f.jpg',\n            redirectUrl:\n              'https://www.swiggy.com/city/delhi/dominos-pizza-100-ft-road-chhatarpur-rest239854',\n            title: 'Cheese Volcano Farmhouse',\n            description:\n              'Centre loaded with Molten Cheese & topped with Onion, Capsicum, Tomato & Grilled Mushroom *Contains non-edible container under the Pizza',\n            price: '₹299',\n          },\n          {\n            imageUrl:\n              'https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,h_600/FOOD_CATALOG/IMAGES/CMS/2024/7/4/4e30b1ff-dbe8-41d3-b083-d46b9d742ffc_636d161e-7f34-4371-b63c-bf9e3d091a0f.jpg',\n            redirectUrl:\n              'https://www.swiggy.com/city/delhi/dominos-pizza-100-ft-road-chhatarpur-rest239854',\n            title: 'Cheese Volcano Farmhouse',\n            description:\n              'Centre loaded with Molten Cheese & topped with Onion, Capsicum, Tomato & Grilled Mushroom *Contains non-edible container under the Pizza',\n            price: '₹299',\n          },\n          {\n            imageUrl:\n              'https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,h_600/FOOD_CATALOG/IMAGES/CMS/2024/7/4/4e30b1ff-dbe8-41d3-b083-d46b9d742ffc_636d161e-7f34-4371-b63c-bf9e3d091a0f.jpg',\n            redirectUrl:\n              'https://www.swiggy.com/city/delhi/dominos-pizza-100-ft-road-chhatarpur-rest239854',\n            title: 'Cheese Volcano Farmhouse',\n            description:\n              'Centre loaded with Molten Cheese & topped with Onion, Capsicum, Tomato & Grilled Mushroom *Contains non-edible container under the Pizza',\n            price: '₹299',\n          },\n        ],\n        qrData: {\n          qrImageUrl:\n            'https://images.squarespace-cdn.com/content/v1/5d3f241fa4e0350001fa20d5/1636491460338-AIZAXV2978MGIDQE0GT7/qr-code.png?format=2500w',\n          title: 'Cheese Volcano Blazing Chicken',\n        },\n      },\n    ],\n  },\n};\nexport const fetchAdData = (contentId: string): Promise<any> => {\n  // return new Promise((res, rej) => {\n  //   try {\n  //     //* Removing trailing '/' from DataUrl\n  //     const data_url: string =\n  //       Config.DataUrl[Config.DataUrl.length - 1] !== '/'\n  //         ? Config.DataUrl\n  //         : Config.DataUrl.slice(0, Config.DataUrl.length - 2);\n\n  //     if (!file_name.includes('.json')) {\n  //       file_name += '.json';\n  //     }\n  //     //* Fetching ad data\n  //     fetch(`${data_url}/${file_name}`, {\n  //       method: 'GET',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         Accept: 'application/json',\n  //       },\n  //     })\n  //       .then(fetch_res => {\n  //         fetch_res.json().then((json_data: []) => {\n  //           //* Sorting according ad data according to start_time\n  //           json_data.sort((a, b) => {\n  //             if (parseInt(a['start_time']) < parseInt(b['start_time'])) {\n  //               return -1;\n  //             }\n  //             if (parseInt(a['start_time']) > parseInt(b['start_time'])) {\n  //               return 1;\n  //             }\n  //             return 0;\n  //           });\n  //           res(json_data);\n  //         });\n  //       })\n  //       .catch(err => {\n  //         rej(err);\n  //       });\n  //   } catch (err) {\n  //     rej(err);\n  //   }\n  // });\n  return new Promise((res, rej) => {\n    if (sampleData[contentId]) {\n      console.log('adsData', sampleData[contentId].adsData);\n      res(sampleData[contentId].adsData);\n    } else {\n      console.log(sampleData, contentId);\n      console.log(sampleData[contentId]);\n      rej('No data found');\n    }\n  });\n};\n//* Finds video element according to the given data attribute ex: data-displaymaxtap\n// export const getVideoElement = (): HTMLVideoElement | undefined => {\n\n//     const elements = document.querySelectorAll(`[${Config.DataAttribute}]`);\n//     for (let i = 0; i < elements.length; i++) {\n//         if (elements[i].tagName === 'VIDEO') {\n//             return elements[i] as HTMLVideoElement;\n//         }\n\n//     }\n//     return undefined;\n// }\nexport const getVideoElement = (): HTMLVideoElement | undefined => {\n  const elements = document.querySelectorAll(`video`);\n  for (let i = 0; i < elements.length; i++) {\n    if (elements[i].tagName === 'VIDEO') {\n      return elements[i] as HTMLVideoElement;\n    }\n  }\n  return undefined;\n};\n\n//* Returns index of ad according to video current and ad start & end times which need to display\nexport const getCurrentComponentIndex = (\n  componentsData: AdComponentData[],\n  videoCurrentTimeInSeconds: number\n): number => {\n  for (let i = 0; i < componentsData.length; i++) {\n    const component = componentsData[i];\n    if (\n      // videoCurrentTimeInSeconds + Config.PrefetchImageTime >= component.starTime &&\n      videoCurrentTimeInSeconds >= component.startTime &&\n      videoCurrentTimeInSeconds <= component.endTime\n    ) {\n      return i;\n    }\n  }\n  //* If no are ads there to play returns -1\n  return -1;\n};\n//* Resize te ad_image according to video width\nexport const resizeComponentImgAccordingToVideo = () => {\n  let video = document.querySelector(`[${Config.DataAttribute}]`);\n  let ad_image_wrapper = document.querySelector(\n    `.${Config.classNames.image_wrapper}`\n  ) as HTMLDivElement;\n\n  if (\n    document.querySelector('.' + Config.classNames.image_wrapper) &&\n    window.innerWidth > 740 &&\n    video &&\n    ad_image_wrapper\n  ) {\n    let video_width = video.getBoundingClientRect().width;\n    let ad_width = (5 / 100) * video_width;\n    //* Min width of ad_image is 50px.\n    if (ad_width > 50) {\n      ad_image_wrapper.style.width = ad_width + 'px';\n    } else {\n      ad_image_wrapper.style.width = 50 + 'px';\n    }\n  }\n};\n//* Returns object which will send to Google Analytics\nexport const createGADict = (\n  current_component_data: AdComponentData\n): GaGeneric => {\n  return {\n    //content\n    client_id: current_component_data['client_id'],\n    client_name: current_component_data['client_name'] || 'null',\n    content_id: current_component_data['content_id'] || 'null',\n    content_name: current_component_data['content_name'] || 'null',\n    content_type: current_component_data['content_type'] || 'null',\n    show_name: current_component_data['show_name'] || 'null',\n    season: current_component_data['season'] || 'null',\n    episode_no: current_component_data['episode_no'] || 'null',\n    duration: current_component_data['duration'] || 'null',\n    content_language: current_component_data['content_language'] || 'null',\n\n    //advertiser\n    advertiser: current_component_data['advertiser'] || 'null',\n\n    caption_regional_language:\n      current_component_data['caption_regional_language'] || 'null',\n    caption: current_component_data['caption'] || 'null',\n    start_time: current_component_data['start_time'] || 'null',\n    end_time: current_component_data['end_time'] || 'null',\n\n    //product\n    gender: current_component_data['gender'] || 'null',\n    product_details: current_component_data['product_details'] || 'null',\n    product_article_type: current_component_data['article_type'] || 'null',\n    category: current_component_data['category'] || 'null',\n    subcategory: current_component_data['subcategory'] || 'null',\n    product_link: current_component_data['product_link'] || 'null',\n    product_image_link: current_component_data['image_link'] || 'null',\n    redirect_link: current_component_data['redirect_link'] || 'null',\n    //user\n    ad_viewed_count: current_component_data['ad_viewed_count'] || -1,\n\n    // device\n    browser_name: platform.name || 'null',\n    os_family: platform.os.family || 'null',\n    device_manufacturer: platform.manufacturer,\n    os_architecture: platform.os.architecture,\n    os_version: platform.os.version || 'null',\n    screen_resolution: `${screen.width}x${screen.height}`,\n    screen_orientation: screen.orientation.type,\n    full_screen: document.fullscreenEnabled,\n\n    //Version\n    plugin_version: LIB_VERSION,\n  };\n};\n","import Config, { shoppingBagSvg } from './config';\nimport { AdComponentData } from './types';\nimport {\n  fetchAdData,\n  getCurrentComponentIndex,\n  getVideoElement,\n  // createGADict,\n  resizeComponentImgAccordingToVideo,\n} from './utils';\n\nclass AdComponent {\n  private video?: HTMLVideoElement;\n  private parentElement: HTMLElement | null; //*  Parent element of video element\n  private currentComponentIndex = -1;\n  private componentsData?: Array<AdComponentData>;\n  private contentId: string;\n  private adDivComponent?: HTMLDivElement; //* Actual ad component (container📦) where ad_text and ad_image goes\n  private intervalId?: any;\n  private isInitialized = false;\n  constructor() {\n    this.parentElement = undefined;\n    this.intervalId = undefined;\n  }\n\n  public init = (data: { contentId: string }) => {\n    //* Check if the component is already initialized or ad is already present\n    if (\n      this.isInitialized ||\n      document.getElementById(Config.AdComponentElementId)\n    ) {\n      console.log('Re-Initializing');\n      return;\n    }\n    if (!data.contentId) {\n      console.error('ContentId is missing');\n      return;\n    }\n    try {\n      this.isInitialized = true;\n      this.contentId = data.contentId;\n\n      if (typeof window === 'undefined')\n        throw new ReferenceError(\n          \"'window.document' is undefined while initializing Ads. Initialize in lifecyle events\"\n        );\n\n      //* Adding google 📈 analytics script tag\n      /*   if (!document.getElementById('ga4-script')) {\n        const ga_script_element = document.createElement('script');\n        ga_script_element.src = `https://www.googletagmanager.com/gtag/js?id=${Config.GoogleAnalyticsCode}`;\n        ga_script_element.async = true;\n        ga_script_element.id = 'ga4-script';\n\n        window.dataLayer = window.dataLayer || [];\n        window.gtag = function () {\n          window.dataLayer.push(arguments);\n        };\n\n        ga_script_element.addEventListener('load', () => {\n          window.gtag('js', new Date());\n          window.gtag('config', Config.GoogleAnalyticsCode);\n        });\n\n        const head_tag = document.querySelector('head');\n        head_tag?.appendChild(ga_script_element);\n      } */\n\n      this.video = getVideoElement();\n\n      //*Fetching ad data\n      fetchAdData(this.contentId)\n        .then(data => {\n          this.componentsData = data;\n          if (!this.componentsData) {\n            console.error('Ad data is empty!');\n            return;\n          }\n\n          //* Adding ad component sibling to video element\n          this.addAdElement();\n\n          //* Resizing the ad_image when window resizes\n          window.addEventListener('resize', () => {\n            resizeComponentImgAccordingToVideo();\n          });\n          // //* Setting initial values\n          // for (let i = 0; i < this.componentsData.length; i++) {\n          //   this.componentsData[i]['ad_viewed_count'] = 0;\n          //   this.componentsData[i]['times_clicked'] = 0;\n          //   this.componentsData[i]['is_image_loaded'] = false;\n          //   this.componentsData[i]['image_error'] = false;\n          // }\n          //* Updating ad component for every 1s\n          this.intervalId = setInterval(this.updateComponent, 1000);\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    } catch (err) {\n      console.error(err);\n      this.isInitialized = false;\n    }\n  };\n\n  private updateComponent = () => {\n    //* Checking if video element is present\n    if (!this.video) {\n      //* Finding for video element until we get;\n      this.video = getVideoElement();\n      return;\n    }\n\n    if (!this.adDivComponent) {\n      this.addAdElement();\n      console.error('Ad element is not present', {\n        method: 'updateComponent',\n      });\n      return;\n    }\n    if (!this.componentsData) {\n      console.error('Ad data is empty!', {\n        method: 'updateComponent',\n      });\n      return;\n    }\n\n    //* Checking if ad element is 👬 sibling to video element every time\n    if (this.video.parentElement !== this.adDivComponent.parentElement) {\n      console.error('Ad element is not sibling to video element', {\n        method: 'updateComponent',\n      });\n      this.adDivComponent.remove();\n      if (!this.addAdElement()) {\n        console.error('Ad element is not present', {\n          method: 'updateComponent',\n        });\n        return;\n      }\n    }\n\n    //* Finding which ad to play at current video time.\n    const newAdComponentIndex = getCurrentComponentIndex(\n      this.componentsData,\n      Math.floor(this.video.currentTime)\n    );\n    console.log('newAdComponentIndex', newAdComponentIndex);\n    //* Displaying no ad.\n    if (newAdComponentIndex < 0) {\n      this.removeCurrentAdElement(this.adDivComponent);\n      return;\n    }\n    this.currentComponentIndex = newAdComponentIndex;\n    //* Checking if image is already cached else Pre-fetching ⬇️ image before 15 sec of ad.\n    // if (\n    //   !this.componentsData[this.currentComponentIndex]['is_image_loaded'] &&\n    //   !this.componentsData[this.currentComponentIndex]['image_error']\n    // ) {\n    //   this.prefetchAdImage();\n    // }\n\n    if (\n      this.canCloseAd(Math.floor(this.video.currentTime)) &&\n      this.adDivComponent.style.display !== 'none'\n    ) {\n      console.log('Removing ad', {\n        methodName: 'updateComponent',\n      });\n      this.removeCurrentAdElement(this.adDivComponent);\n    }\n    if (\n      this.canAdDisplay(Math.floor(this.video.currentTime)) &&\n      this.adDivComponent &&\n      this.adDivComponent.style.display === 'none'\n      // !this.componentsData[this.currentComponentIndex]['image_error'] &&\n      // this.componentsData[this.currentComponentIndex]['is_image_loaded']\n    ) {\n      console.log('Displaying ad', {\n        methodName: 'updateComponent',\n      });\n      this.displayAd();\n    }\n  };\n\n  //* 💉 Inserting ad component inside DOM\n  private addAdElement = (): boolean => {\n    if (!this.video) {\n      return false;\n    }\n    this.video.style.width = '100%';\n    this.video.style.height = '100%';\n    this.parentElement = this.video.parentElement;\n    if (!this.parentElement) {\n      return false;\n    }\n    //* Adding ad-element 👬 sibling to video element\n\n    this.parentElement.style.position = 'relative';\n    this.adDivComponent = document.createElement('div');\n    this.adDivComponent.style.display = 'none';\n    this.adDivComponent.id = Config.AdComponentElementId;\n    this.adDivComponent.className = 'hotstar_ad_component_wrapper';\n    this.parentElement?.appendChild(this.adDivComponent);\n    this.adDivComponent.addEventListener('click', this.redirectToAd);\n    resizeComponentImgAccordingToVideo();\n    return true;\n  };\n  //* Loading and caching image 🖼️\n  /*   private prefetchAdImage = () => {\n    if (!this.componentsData) {\n      return;\n    }\n    let img = new Image();\n    this.componentsData[this.currentComponentIndex]['is_image_loaded'] = true;\n    img.onerror = () => {\n      this.componentsData[this.currentComponentIndex]['image_error'] = true;\n    };\n    img.src = this.componentsData[this.currentComponentIndex]['image_link'];\n  }; */\n\n  //* Checks if ad can show up at given video time\n  private canAdDisplay = (currentTimeInSecs: number): boolean => {\n    const current_component = this.componentsData[this.currentComponentIndex];\n\n    if (\n      current_component.startTime < 0 ||\n      !this.componentsData ||\n      !current_component\n      // !current_component.is_image_loaded\n    ) {\n      return false;\n    }\n\n    //* Checking if video current time is in range ⬅️➡️ of ad start time and ad end time\n    if (\n      currentTimeInSecs <\n        this.componentsData[this.currentComponentIndex]['endTime'] &&\n      currentTimeInSecs >\n        this.componentsData[this.currentComponentIndex]['startTime']\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  //* Checking if video current time is not in range ⬅️➡️ of ad start time and ad end time\n\n  private canCloseAd = (currentTimeInSecs: number): boolean => {\n    if (!this.componentsData) return true;\n    if (this.componentsData[this.currentComponentIndex].startTime < 0) {\n      return false;\n    }\n    if (\n      currentTimeInSecs >\n        this.componentsData[this.currentComponentIndex]['endTime'] ||\n      currentTimeInSecs <\n        this.componentsData[this.currentComponentIndex]['startTime']\n    ) {\n      return true;\n    }\n    return false;\n  };\n  //*❎ Removing innerHtml from  main container\n  private removeCurrentAdElement = (main_component: HTMLDivElement) => {\n    if (!main_component) return;\n    main_component.style.display = 'none';\n    main_component.innerHTML = '';\n  };\n\n  //* Adding innerHtml into main container and making it's display flex\n  private displayAd = (): void => {\n    if (!this.adDivComponent || !this.componentsData) {\n      console.error('Ad element is not present', {\n        method: 'displayAd',\n        adDivComponent: this.adDivComponent,\n        componentsData: this.componentsData,\n      });\n      return;\n    }\n    if (this.adDivComponent.style.display === 'flex') return;\n    if (\n      this.currentComponentIndex < 0 ||\n      !this.componentsData[this.currentComponentIndex]\n    )\n      return;\n\n    const currentAdData = this.componentsData[this.currentComponentIndex];\n    if (currentAdData.items.length > 3) {\n      currentAdData.items = currentAdData.items.slice(0, 3);\n    }\n\n    const shopButton = document.createElement('button');\n    shopButton.className = 'shop-button';\n    shopButton.innerHTML = `${shoppingBagSvg}<span>Shop</span>`;\n    this.adDivComponent.appendChild(shopButton);\n\n    for (const itemCardData of currentAdData.items) {\n      const description =\n        itemCardData.description.length > 70\n          ? itemCardData.description.slice(0, 70) + '...'\n          : itemCardData.description;\n      const item = document.createElement('a');\n      item.className = 'ad_item_card';\n      item.href = itemCardData.redirectUrl;\n      item.target = '_blank';\n      item.innerHTML = `\n      <img src=\"${itemCardData.imageUrl}\" alt=\"${itemCardData.title}\"/>\n      <div class=\"ad_item_card_content\">\n        <h3 class=\"title\">${itemCardData.title}</h3>\n        <p class=\"description\">${description}</p>\n        <p class=\"price\">${itemCardData.price}</p>\n      </div>\n      `;\n      this.adDivComponent.appendChild(item);\n    }\n\n    if (currentAdData.items.length > 0) {\n      // Put \"Or\" text\n      const orText = document.createElement('p');\n      orText.className = 'or_text';\n      orText.innerHTML = 'OR';\n      this.adDivComponent.appendChild(orText);\n    }\n\n    if (currentAdData.qrData) {\n      const qrCard = document.createElement('div');\n      qrCard.className = 'qr_container';\n      qrCard.innerHTML = `\n      <img src=\"${currentAdData.qrData.qrImageUrl}\" alt=\"${currentAdData.qrData.title}\"/>\n      <p>${currentAdData.qrData.title}</p>\n      `;\n      this.adDivComponent.appendChild(qrCard);\n    }\n    this.adDivComponent.style.display = 'flex';\n    // main_component.innerHTML = component_html;\n\n    // * Incrementing ⬆️️ no of times ad is viewed 👁️.\n    // this.componentsData[this.currentComponentIndex]['ad_viewed_count']++;\n    // const current_component_data = this.componentsData[\n    //   this.currentComponentIndex\n    // ];\n\n    //* Triggering 👀 Impression  📈📈 Google Analytics events\n    // const ga_impression_data = createGADict(current_component_data);\n    // window.gtag('event', 'impression', ga_impression_data);\n  };\n\n  //* Redirecting to ad🔗link in new tab\n  private redirectToAd = (): void => {\n    try {\n      if (!this.componentsData) {\n        return;\n      }\n      this.video.pause();\n      //* Increasing ⬆️ no of times clicked 🖱️\n      // this.componentsData[this.currentComponentIndex]['times_clicked']++;\n      // const current_component_data = this.componentsData[\n      //   this.currentComponentIndex\n      // ];\n      // var ga_click_data = createGADict(current_component_data);\n      // ga_click_data['event_category'] = 'click';\n      // ga_click_data['time_to_click'] = Math.floor(\n      //   this.video.currentTime -\n      //     this.componentsData[this.currentComponentIndex]['start_time']\n      // );\n      // ga_click_data['times_clicked'] = current_component_data['times_clicked'];\n      //* Triggering 🖱️ Click  📈📈 Google Analytics events\n      // window.gtag('event', 'click', ga_click_data);\n      // window.open(\n      //   this.componentsData![this.currentComponentIndex].redirect_link,\n      //   '_blank'\n      // );\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  //*❎ Remove ad from DOM, stop updating ad and re-set all class variables\n  public removeAd(): void {\n    //* Stopping loop\n    clearInterval(this.intervalId);\n\n    this.isInitialized = false;\n    //* Resetting class variables\n    this.video,\n      this.parentElement,\n      this.componentsData,\n      this.intervalId,\n      (this.adDivComponent = undefined);\n    this.currentComponentIndex = 0;\n    this.removeCurrentAdElement(\n      document.getElementById(Config.AdComponentElementId) as HTMLDivElement\n    );\n    //* Removing element form dom\n    document.getElementById(Config.AdComponentElementId)?.remove();\n  }\n}\n/* \n* Instantiate a AdComponent object and exporting it\n* So that we can import component anywhere we want and the component will be same throughout the whole project\n\n? Saves us from unnecessary initalization of component\n*/\nexport default new AdComponent();\n","import './styles.css';\nimport { LIB_VERSION } from './version';\nconsole.log(`ads_plugin@${LIB_VERSION}`);\nexport { default as AdComponent } from './app';\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","sampleData","onam","adsData","startTime","endTime","items","imageUrl","redirectUrl","title","description","price","qrData","qrImageUrl","getVideoElement","elements","querySelectorAll","i","length","tagName","resizeComponentImgAccordingToVideo","video","querySelector","ad_image_wrapper","window","innerWidth","ad_width","getBoundingClientRect","width","data","contentId","_this","isInitialized","getElementById","console","log","ReferenceError","Promise","res","rej","then","componentsData","addAdElement","addEventListener","intervalId","setInterval","updateComponent","error","err","adDivComponent","method","parentElement","remove","newAdComponentIndex","videoCurrentTimeInSeconds","component","getCurrentComponentIndex","Math","floor","currentTime","removeCurrentAdElement","currentComponentIndex","canCloseAd","display","methodName","canAdDisplay","displayAd","height","position","id","className","redirectToAd","currentTimeInSecs","current_component","main_component","innerHTML","currentAdData","slice","shopButton","shoppingBagSvg","itemCardData","item","href","target","orText","qrCard","pause","undefined","removeAd","clearInterval","this"],"mappings":"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"}